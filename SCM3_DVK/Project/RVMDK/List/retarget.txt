; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\retarget.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\retarget.d --feedback=.\Obj\output.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Source\inc -I..\..\Driver\inc -IE:\00_Workspace\0608_AG16KSDE176_DemoBoard\SCM3_DVK\Project\RVMDK\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0 -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=513 -DARMCM3 --omf_browse=.\obj\retarget.crf ..\..\Source\src\retarget.c]
                          THUMB

                          AREA ||i.fgetc||, CODE, READONLY, ALIGN=2

                  fgetc PROC
;;;48     
;;;49     int fgetc(FILE *f)
000000  4601              MOV      r1,r0
;;;50     {
;;;51     	//RXFF, Receive FIFO full, 
;;;52     	while (!(USART->FR & (1 << 6)));                             //wait for full
000002  bf00              NOP      
                  |L1.4|
000004  4804              LDR      r0,|L1.24|
000006  6980              LDR      r0,[r0,#0x18]
000008  f0000040          AND      r0,r0,#0x40
00000c  2800              CMP      r0,#0
00000e  d0f9              BEQ      |L1.4|
;;;53     	return (USART->DR);
000010  4801              LDR      r0,|L1.24|
000012  6800              LDR      r0,[r0,#0]
;;;54     }
000014  4770              BX       lr
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
                          DCD      0x40017000

                          AREA ||i.fputc||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;37     
;;;38     int fputc(int ch, FILE *f) {
000000  b530              PUSH     {r4,r5,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;39       /* Write a character to the USART */
;;;40       if (ch=='\n') fputc('\r',f);
000006  2c0a              CMP      r4,#0xa
000008  d103              BNE      |L2.18|
00000a  4629              MOV      r1,r5
00000c  200d              MOVS     r0,#0xd
00000e  f7fffffe          BL       fputc
                  |L2.18|
;;;41       USART->DR = ch;
000012  4805              LDR      r0,|L2.40|
000014  6004              STR      r4,[r0,#0]
;;;42     
;;;43       /* wait until the transmit FIFO is empty */
;;;44       while (!((USART->FR) & (1 << 7)));
000016  bf00              NOP      
                  |L2.24|
000018  4803              LDR      r0,|L2.40|
00001a  6980              LDR      r0,[r0,#0x18]
00001c  f0000080          AND      r0,r0,#0x80
000020  2800              CMP      r0,#0
000022  d0f9              BEQ      |L2.24|
;;;45       
;;;46       return (ch);
000024  4620              MOV      r0,r4
;;;47     }
000026  bd30              POP      {r4,r5,pc}
;;;48     
                          ENDP

                  |L2.40|
                          DCD      0x40017000
