; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\hyhwtimer.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\hyhwtimer.d --feedback=.\Obj\output.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Source\inc -I..\..\Driver\inc -IE:\00_Workspace\0608_AG16KSDE176_DemoBoard\SCM3_DVK\Project\RVMDK\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0 -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=513 -DARMCM3 --omf_browse=.\obj\hyhwtimer.crf ..\..\Driver\src\hyhwTimer.c]
                          THUMB

                          AREA ||i.hyhwTimerA_IRQ||, CODE, READONLY, ALIGN=2

                  hyhwTimerA_IRQ PROC
;;;101    U8 gTest;
;;;102    void hyhwTimerA_IRQ(void)
000000  b510              PUSH     {r4,lr}
;;;103    {
;;;104    	if(TIMA->Timer1MIS)////如果是定时器1的中断
000002  480f              LDR      r0,|L1.64|
000004  6940              LDR      r0,[r0,#0x14]
000006  b1a0              CBZ      r0,|L1.50|
;;;105    	{
;;;106    		hyhwTimerA_Timer1IntClear();
000008  2001              MOVS     r0,#1
00000a  490d              LDR      r1,|L1.64|
00000c  60c8              STR      r0,[r1,#0xc]
;;;107    	
;;;108    		if(gTest)
00000e  480d              LDR      r0,|L1.68|
000010  7800              LDRB     r0,[r0,#0]  ; gTest
000012  b138              CBZ      r0,|L1.36|
;;;109    		{
;;;110    		  /* OUT0 LOW */
;;;111    			hyhwGpio_SetLow(GPIOA,GPIO_0);
000014  2101              MOVS     r1,#1
000016  480c              LDR      r0,|L1.72|
000018  f7fffffe          BL       hyhwGpio_SetLow
;;;112    			gTest = 0;
00001c  2000              MOVS     r0,#0
00001e  4909              LDR      r1,|L1.68|
000020  7008              STRB     r0,[r1,#0]
000022  e006              B        |L1.50|
                  |L1.36|
;;;113    		}
;;;114    		else
;;;115    		{
;;;116    			/* OUT0 HIGH */
;;;117    			hyhwGpio_SetHigh(GPIOA,GPIO_0);
000024  2101              MOVS     r1,#1
000026  4808              LDR      r0,|L1.72|
000028  f7fffffe          BL       hyhwGpio_SetHigh
;;;118    			gTest = 1;
00002c  2001              MOVS     r0,#1
00002e  4905              LDR      r1,|L1.68|
000030  7008              STRB     r0,[r1,#0]
                  |L1.50|
;;;119    		}
;;;120    	}
;;;121    	if(TIMA->Timer2MIS) //如果是定时器2的中断
000032  4803              LDR      r0,|L1.64|
000034  6b40              LDR      r0,[r0,#0x34]
000036  b110              CBZ      r0,|L1.62|
;;;122    	{
;;;123    		hyhwTimerA_Timer2IntClear();
000038  2001              MOVS     r0,#1
00003a  4901              LDR      r1,|L1.64|
00003c  62c8              STR      r0,[r1,#0x2c]
                  |L1.62|
;;;124    	
;;;125    	}
;;;126    }
00003e  bd10              POP      {r4,pc}
                          ENDP

                  |L1.64|
                          DCD      0x40010000
                  |L1.68|
                          DCD      gTest
                  |L1.72|
                          DCD      0x40012000

                          AREA ||i.hyhwTimerA_InitTimer1||, CODE, READONLY, ALIGN=2

                  hyhwTimerA_InitTimer1 PROC
;;;59     *-------------------------------------------------------------------------*/
;;;60     void  hyhwTimerA_InitTimer1 (U32 IntTimeUs,U8 IntMode)
000000  b510              PUSH     {r4,lr}
;;;61     {
;;;62     	U32 count;
;;;63     	
;;;64     	count = (HYHW_APB_CLOCK/1000000)*IntTimeUs;
000002  eb000380          ADD      r3,r0,r0,LSL #2
000006  011a              LSLS     r2,r3,#4
;;;65     	
;;;66     	TIMA->Timer1Ctrl = TIMER_CTRL_PERIODIC|TIMER_CTRL_SIZE32|IntMode;
000008  f0410342          ORR      r3,r1,#0x42
00000c  4c07              LDR      r4,|L2.44|
00000e  60a3              STR      r3,[r4,#8]
;;;67     	TIMA->Timer1BGL  = count;
000010  4623              MOV      r3,r4
000012  619a              STR      r2,[r3,#0x18]
;;;68     	TIMA->Timer1Load = count;
000014  601a              STR      r2,[r3,#0]
;;;69     	hyhwTimerA_Timer1IntEnable();
000016  689b              LDR      r3,[r3,#8]
000018  f0430320          ORR      r3,r3,#0x20
00001c  60a3              STR      r3,[r4,#8]
;;;70     	hyhwTimerA_Timer1Start(); //启动定时器
00001e  4623              MOV      r3,r4
000020  689b              LDR      r3,[r3,#8]
000022  f0430380          ORR      r3,r3,#0x80
000026  60a3              STR      r3,[r4,#8]
;;;71     }
000028  bd10              POP      {r4,pc}
;;;72     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x40010000

                          AREA ||i.hyhwTimerA_InitTimer2||, CODE, READONLY, ALIGN=2

                  hyhwTimerA_InitTimer2 PROC
;;;82     *-------------------------------------------------------------------------*/
;;;83     void  hyhwTimerA_InitTimer2 (U32 IntTimeUs,U8 IntMode)
000000  b510              PUSH     {r4,lr}
;;;84     {
;;;85     	U32 count;
;;;86     	
;;;87     	count = (HYHW_APB_CLOCK/1000000)*IntTimeUs;
000002  eb000380          ADD      r3,r0,r0,LSL #2
000006  011a              LSLS     r2,r3,#4
;;;88     	
;;;89     	TIMA->Timer2Ctrl = TIMER_CTRL_PERIODIC|TIMER_CTRL_SIZE32|IntMode;
000008  f0410342          ORR      r3,r1,#0x42
00000c  4c07              LDR      r4,|L3.44|
00000e  62a3              STR      r3,[r4,#0x28]
;;;90     	TIMA->Timer2BGL  = count;
000010  4623              MOV      r3,r4
000012  639a              STR      r2,[r3,#0x38]
;;;91     	TIMA->Timer2Load = count;
000014  621a              STR      r2,[r3,#0x20]
;;;92     	hyhwTimerA_Timer2IntEnable();
000016  6a9b              LDR      r3,[r3,#0x28]
000018  f0430320          ORR      r3,r3,#0x20
00001c  62a3              STR      r3,[r4,#0x28]
;;;93     	hyhwTimerA_Timer2Start(); //启动定时器
00001e  4623              MOV      r3,r4
000020  6a9b              LDR      r3,[r3,#0x28]
000022  f0430380          ORR      r3,r3,#0x80
000026  62a3              STR      r3,[r4,#0x28]
;;;94     }
000028  bd10              POP      {r4,pc}
;;;95     
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      0x40010000

                          AREA ||.data||, DATA, ALIGN=0

                  gTest
000000  00                DCB      0x00
